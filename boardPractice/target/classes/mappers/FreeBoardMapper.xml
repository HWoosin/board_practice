<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="com.spring.myweb.freeboard.mapper.IFreeBoardMapper">
	
	
	<!-- 
		#동적 SQL 쿼리
		태그로 조건문을 사용하여 쿼리의 실행을 동적으로 제어할 수 있는 문법
		중복된 SQL 쿼리를 피할 수 있고, 상황에 따른 능동적 대처가 가능.
		미리 쿼리문을 준비해 놓고, <include refid="이름(id)"/>를 통해 삽입하여 사용
	 -->
	 <sql id="search">
	 	<if test="condition == 'title'">
	 		where title like concat('%', #{keyword}, '%')
	 	</if>
	 	<if test="condition == 'writer'">
	 		where writer like concat('%', #{keyword}, '%')
	 	</if>
	 	<if test="condition == 'content'">
	 		where content like concat('%', #{keyword}, '%')
	 	</if>
	 	<if test="condition == 'titleContent'">
	 		where title like concat('%', #{keyword}, '%')
	 		or content like concat('%', #{keyword}, '%')
	 	</if>
	 </sql>
	 
	 
	<insert id="regist"><!-- 원글등록 -->
	
	<!--  <selectKey resultType="java.lang.Integer" keyProperty="bno" order="BEFORE">
        SELECT IFNULL(MAX(bno), 0) + 1 AS new_bno FROM freeboard
    </selectKey>-->
    
	    INSERT INTO freeboard
	    (title, writer, content, pw,  group_ord)
	    VALUES(#{title}, #{writer}, #{content}, #{pw}, #{groupOrd}+1)
	</insert>
	
	<update id = "updateObno">
		update freeboard set origin_bno = bno, parent_bno = bno ORDER BY bno DESC LIMIT 1;
	</update>
	
	<update id = "updatePos">
		update freeboard set group_ord = group_ord +1 where origin_bno = #{originBno} and group_ord > #{groupOrd}
	</update>
	
	<insert id="replyRegist"><!-- 답글 작성하며 답글의 계층정하기 -->
		insert into freeboard
		(title, writer, content, pw, parent_bno, origin_bno, group_ord, group_layer)
		values(#{title}, #{writer}, #{content}, #{pw}, #{bno}, #{originBno}, #{groupOrd}, #{groupLayer}+1)
	</insert>
	
	<!--  <select id="getList" resultType="board">
	    Select f.*,
	    (Select count(*) from freereply where bno = f.bno) AS reply_cnt,
	    @rownum := @rownum + 1 AS rownum
	    FROM freeboard f
	    CROSS JOIN (SELECT @rownum := 0) r
	    <include refid="search" />
	    order by origin_bno desc, group_ord asc
	    limit #{pageStart}, #{cpp}
	</select> -->
	
	<select id="getList" resultType ="board">
		Select f.*,
		(Select count(*) from freereply where bno = f.bno) AS reply_cnt 
		FROM freeboard f
		<include refid="search" />
		order by origin_bno desc, group_ord asc
		limit #{pageStart}, #{cpp}
	</select>
	
	<select id="getTotal" resultType ="int">
		Select count(*)
		from freeboard
		<include refid="search" />
	</select>
	
	<select id="getContent" resultType ="int">
		Select count(*) from freeboard
		Where bno = #{bno} and pw = #{pw}
	</select>
	
	<select id="getDetail" resultType ="board">
		Select * from freeboard
		Where bno = #{bno}
	</select>
	
	<update id="update">
		Update freeboard set title = #{title}, content = #{content}, pw = #{pw}
		where bno = #{bno}
	</update>
	
	<!-- 답글이 있을경우 삭제법 List에 보여주기 위함-->
	<update id="delfix">
		Update freeboard set del = 1 where bno = #{bno}
	</update>
	
	<select id="checkChild" resultType = "java.lang.Integer">
		select IFNULL(MAX(group_layer), 0) from freeboard where parent_bno = #{bno}
	</select>
	
	<!-- 논리적삭제 갯수확인 -->
	<select id = "countDelAll" resultType = "int">
		select count(*)from freeboard where del = 1;
	</select>
	
	<!-- 완전삭제 -->
	<delete id="delete">
		Delete from freeboard Where bno = #{bno}
	</delete>
	<!-- 글이 완전 삭제 되었을때 달린 댓글들 삭제 -->
	<delete id="deleteReply">
		Delete from freereply Where bno = #{bno}
	</delete>
	
	<!-- 해당그룹의 전체글 -->
	<select id="countGrp" resultType ="int">
		select count(*) from freeboard where origin_bno = #{originBno};
	</select>
	
	<!-- 해당그룹의 논리삭제된 갯수 -->
	<select id="countDel" resultType ="int">
		select count(*) from freeboard where del = 1 and origin_bno = #{originBno};
	</select>
	
	<!-- 해당그룹의 글이 모두 논리적 삭제면 전부 삭제 -->
	<delete id="deleteAll">
		Delete from freeboard where origin_bno = #{originBno} and del = 1;
	</delete>
	
	
	<!-- <select id="getExcel" resultType = "board">
		Select * from freeboard where del = 0 order by origin_bno desc, group_ord asc
	</select>-->
	<select id="getExcel" resultType="board">
	    SELECT * from (select @rownum := @rownum + 1 AS rownum, f.*
	    from freeboard f <include refid="search" />,
	    (select @rownum := 0)tmp
	    
	    ORDER BY origin_bno asc, group_ord desc)sub order by sub.rownum desc
	</select>
	
	
	<!-- 파일 업로드 -->
	<insert id="insertfile">
		INSERT INTO fileInfo (bno, upload_path, file_loca, file_name, file_real_name)
	    VALUES((SELECT MAX(bno) FROM freeboard), #{uploadPath},#{fileLoca}, #{fileName}, #{fileRealName})
	</insert>
	
	<insert id="updatefile">
		INSERT INTO fileInfo
		VALUES(#{bno},#{uploadPath}, #{fileRealName}, #{fileName}, #{fileLoca})
	</insert>
	
	<!-- 파일 보기 -->
	<select id ="viewfile" resultType="UDFile">
		select * from fileInfo where bno = #{bno}
	</select>
	
	<!--파일 삭제-->
	<delete id="deleteFile">
		Delete from fileInfo where file_name = #{fileName}
	</delete>
	
	<!-- 임시 삭제 
	<insert id="insertTempfile">
		INSERT INTO tempfileInfo
		VALUES(#{bno},#{uploadPath}, #{fileRealName}, #{fileName}, #{fileLoca})
	</insert>
	
	<delete id="deleteTempFiles">
		Delete from tempfileInfo where bno = #{bno}
	</delete>-->
	
</mapper>




