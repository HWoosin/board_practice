/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-08-04 07:14:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.freeboard;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class freeModify_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/views/freeboard/../include/footer.jsp", Long.valueOf(1690873777803L));
    _jspx_dependants.put("jar:file:/C:/woosin/board_practice/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/boardPractice/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("/WEB-INF/views/freeboard/../include/header.jsp", Long.valueOf(1690873777804L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1690868478505L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write(" \r\n");
      out.write("\r\n");
      out.write("	");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("    <title>인덱스를 만들어 보자</title>\r\n");
      out.write("\r\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/bootstrap.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js\"></script>\r\n");
      out.write("    <!--개인 디자인 추가-->\r\n");
      out.write("    <link href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/css/style.css\" rel=\"stylesheet\">\r\n");
      out.write("    <script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/js/bootstrap.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<header>\r\n");
      out.write("        <div class=\"container-fluid\">\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"container\">\r\n");
      out.write("                    <div class=\"navbar\">\r\n");
      out.write("                        <div class=\"navbar-header\">\r\n");
      out.write("                            <!--data-toggle 같은 것들은 내부적으로 지원하는 반응형 API기능이므로 지우면 안됩니다-->\r\n");
      out.write("                            <button type=\"button\" class=\"navbar-toggle\" data-toggle=\"collapse\" data-target=\"#myNavbar\">\r\n");
      out.write("                                <span class=\"icon-bar\"></span>\r\n");
      out.write("                                <span class=\"icon-bar\"></span>\r\n");
      out.write("                                <span class=\"icon-bar\"></span>\r\n");
      out.write("                            </button>\r\n");
      out.write("                            <a class=\"navbar-brand\" href=\"#\"><img width=\"30\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/logo.svg\" alt=\"Brand\"></a>\r\n");
      out.write("                        </div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("                        <div class=\"collapse navbar-collapse\" id=\"myNavbar\">\r\n");
      out.write("                            <ul class=\"nav navbar-nav\">\r\n");
      out.write("                                <li class=\"active\"><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${PageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">Main</a></li>\r\n");
      out.write("                                <li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/freeboard/freeList\">자유게시판</a></li>\r\n");
      out.write("                                \r\n");
      out.write("								<li><a href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/snsboard/snsList\">SNS</a></li>\r\n");
      out.write("                                <!-- \r\n");
      out.write("                                <li><a href=\"#\">Form</a></li>\r\n");
      out.write("                                <li><a href=\"#\">Board</a></li>\r\n");
      out.write(" 								-->\r\n");
      out.write("\r\n");
      out.write("                            </ul>\r\n");
      out.write("                            <ul class=\"nav navbar-nav navbar-right\">\r\n");
      out.write("                                <li class=\"dropdown\">\r\n");
      out.write("                                    <a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">로그인\r\n");
      out.write("                                        <span class=\"caret\"></span></a>\r\n");
      out.write("                                    <ul class=\"dropdown-menu\">\r\n");
      out.write("                                    	");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("                                        \r\n");
      out.write("                                        ");
      if (_jspx_meth_c_005fif_005f1(_jspx_page_context))
        return;
      out.write(" \r\n");
      out.write("                                    </ul>\r\n");
      out.write("                                </li>\r\n");
      out.write("                            </ul>\r\n");
      out.write("\r\n");
      out.write("                            <form class=\"navbar-form navbar-right\" action=\"\">\r\n");
      out.write("                                <div class=\"input-group\">\r\n");
      out.write("                                    <input type=\"text\" class=\"form-control\" placeholder=\"Search\">\r\n");
      out.write("                                    <div class=\"input-group-btn\">\r\n");
      out.write("\r\n");
      out.write("                                        <button class=\"btn btn-primary\" type=\"submit\">\r\n");
      out.write("                                           	 검색\r\n");
      out.write("                                        </button>\r\n");
      out.write("                                    </div>\r\n");
      out.write("                                </div>\r\n");
      out.write("                            </form>\r\n");
      out.write("                        </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </header>");
      out.write("\r\n");
      out.write("\r\n");
      out.write("    <section>\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"col-xs-12 col-md-9 write-wrap\">\r\n");
      out.write("                        <div class=\"titlebox\">\r\n");
      out.write("                            <p>수정하기</p>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        \r\n");
      out.write("                        <form action=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/freeboard/update\" method=\"post\" name=\"updateForm\">   \r\n");
      out.write("                            <div class=\"form-group\">\r\n");
      out.write("                                <input class=\"form-control\" name=\"bno\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.bno}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" type=\"hidden\">\r\n");
      out.write("                            </div>\r\n");
      out.write("                            <div class=\"form-group\">\r\n");
      out.write("                                <label>작성자</label>\r\n");
      out.write("                                <input class=\"form-control\" id=\"writer\" name=\"writer\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.writer}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly>\r\n");
      out.write("                            </div>    \r\n");
      out.write("                            <div class=\"form-group\">\r\n");
      out.write("                                <label>제목</label>\r\n");
      out.write("                                <input class=\"form-control\" id=\"title\" name=\"title\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" oninput=\"handleInputLength(this, 100)\" onblur=\"trimInput(this)\" >\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <div class=\"form-group\">\r\n");
      out.write("                                <label>내용</label>\r\n");
      out.write("                                <span id=\"textLengthCheck\">0 / 1000</span>\r\n");
      out.write("                                <textarea class=\"form-control\" id=\"content\" rows=\"10\" name=\"content\" oninput=\"handleInputLength(this, 1000)\" >");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.content}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>\r\n");
      out.write("                            </div>\r\n");
      out.write("                            \r\n");
      out.write("                            <div class=\"form-group\">\r\n");
      out.write("                                <label>비밀번호</label>\r\n");
      out.write("                                <input type=\"password\" class=\"form-control\" placeholder=\"(대/소)영문/특수문자 포함 8자~10자 입력가능.\" id=\"pw\" name=\"pw\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${article.pw}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" oninput=\"handleInputLength(this, 10)\" onblur=\"trimInput(this)\">\r\n");
      out.write("                            </div>\r\n");
      out.write("\r\n");
      out.write("                            <button type=\"button\" id=\"listBtn\" class=\"btn btn-dark\">목록</button>    \r\n");
      out.write("                            <button type=\"button\" id=\"updateBtn\" class=\"btn btn-primary\">변경</button>\r\n");
      out.write("                            <button type=\"button\" id=\"delBtn\" class=\"btn btn-info\">삭제</button>\r\n");
      out.write("                    </form>\r\n");
      out.write("                                    \r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        </section>\r\n");
      out.write("        \r\n");
      out.write("        ");
      out.write("\r\n");
      out.write("    <footer>\r\n");
      out.write("        <div class=\"container\">\r\n");
      out.write("            <div class=\"row\">\r\n");
      out.write("                <div class=\"col-md-7 col-sm-12\">\r\n");
      out.write("                    <div class=\"copyright\">\r\n");
      out.write("                        <a href=\"\">\r\n");
      out.write("                            <img width=\"20\" src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/img/logo.svg\" alt=\"Brand\">\r\n");
      out.write("                        </a>\r\n");
      out.write("                        Bootstrap | 대표자 : 홍길동 | E-MAIL : info&#64;info.com<br>\r\n");
      out.write("                        사업자번호 : 123-56-78910 | 개인정보보호책임자 : 홍길동 | 통신판매업 : 2019-서울강남-0001<br>\r\n");
      out.write("                        주소 : 서울시 강남구\r\n");
      out.write("                        <address>&copy;Bootstrap. ALL RIGHTS RESERVED</address>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"col-md-5 col-sm-12 text-right\">\r\n");
      out.write("                    <ul class=\"footer-menu\">\r\n");
      out.write("                        <li><a href=\"#\">고객센터</a></li>\r\n");
      out.write("                        <li><a href=\"#\">이용약관</a></li>\r\n");
      out.write("                        <li><a href=\"#\">개인정보취급방침</a></li>\r\n");
      out.write("                    </ul>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("    <!-- //footer -->");
      out.write("\r\n");
      out.write("      \r\n");
      out.write("      <script>\r\n");
      out.write("        //목록 이동 처리\r\n");
      out.write("        document.getElementById('listBtn').onclick = function() {\r\n");
      out.write("            location.href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/freeboard/freeList\"\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        const titleInput = document.getElementById('title');\r\n");
      out.write("        const writerInput = document.getElementById('writer');\r\n");
      out.write("        const contentInput = document.getElementById('content');\r\n");
      out.write("        const pwInput = document.getElementById('pw');\r\n");
      out.write("        const passwordRegex =  /^(?=.*[0-9])(?=.*[a-z])(?=.*[A-Z])(?=.*[$@!%*#?&])[a-zA-Z0-9$@!%*#?&]{8,10}$/; //최소 8 자 및 최대 10 자, 하나 이상의 대문자, 하나의 소문자, 하나의 숫자 및 하나의 특수 문자 정규식\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        function hasBadWords(inputText){\r\n");
      out.write("                const badWordsRegex = /(바보|멍청이|똥깨|씨발|개새끼|시발|OR|SELECT|INSERT|DELETE|UPDATE|CREATE|DROP|EXEC|UNION|FETCH|DECLARE|TRUNCATE)/gi;//파일처리하면 더 좋을것같음.\r\n");
      out.write("                return badWordsRegex.test(inputText);\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            // function checkWords(inputText){\r\n");
      out.write("            //     const wordExp = /[%=><&]/gi;\r\n");
      out.write("            //     if(wordExp.test(inputText.value) ){\r\n");
      out.write("            //     alert(\"해당 특수문자는 입력하실 수 없습니다.\");\r\n");
      out.write("            //     inputText.value = inputText.value.substring( 0 , inputText.value.length - 1 ); // 입력한 특수문자 한자리 지움\r\n");
      out.write("                \r\n");
      out.write("            //     }\r\n");
      out.write("            // }\r\n");
      out.write("\r\n");
      out.write("        //입력에 따라 textarea 변함\r\n");
      out.write("        const contentTextarea = document.getElementById('content');\r\n");
      out.write("            function adjustTextareaHeight() {\r\n");
      out.write("                contentTextarea.style.height = 'auto';\r\n");
      out.write("                contentTextarea.style.height = contentTextarea.scrollHeight + 'px';\r\n");
      out.write("            }\r\n");
      out.write("\r\n");
      out.write("            contentTextarea.addEventListener('input', adjustTextareaHeight);\r\n");
      out.write("            window.addEventListener('load', adjustTextareaHeight);\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        function updateCharacterCount() {\r\n");
      out.write("            let content = $(\"#content\").val();\r\n");
      out.write("            $(\"#textLengthCheck\").text(content.length + \" / 1000\");\r\n");
      out.write("        }\r\n");
      out.write("            \r\n");
      out.write("         //글자 수 세기\r\n");
      out.write("         $(document).ready(function() {\r\n");
      out.write("            updateCharacterCount();\r\n");
      out.write("                $(\"#content\").keyup(function(e) {\r\n");
      out.write("                    let content = $(this).val();\r\n");
      out.write("                    $(\"#textLengthCheck\").text(content.length + \" / 1000\");\r\n");
      out.write("\r\n");
      out.write("                    if (content.length > 1000) {\r\n");
      out.write("                        alert(\"최대 1000자까지 입력 가능합니다.\");\r\n");
      out.write("                        $(this).val(content.substring(0, 1000));\r\n");
      out.write("                        $(\"#textLengthCheck\").text(\"1000 / 최대 1000자\");\r\n");
      out.write("                    }\r\n");
      out.write("                });\r\n");
      out.write("            });\r\n");
      out.write("            \r\n");
      out.write("\r\n");
      out.write("        const $form = document.updateForm;\r\n");
      out.write("\r\n");
      out.write("        //수정 버튼 이벤트 처리\r\n");
      out.write("        document.getElementById('updateBtn').onclick = function() {\r\n");
      out.write("\r\n");
      out.write("            const titleValue = titleInput.value;\r\n");
      out.write("            const writerValue = writerInput.value;\r\n");
      out.write("            const contentValue = contentInput.value;\r\n");
      out.write("            const pwValue = pwInput.value;\r\n");
      out.write("\r\n");
      out.write("            if(writerValue === ''){\r\n");
      out.write("                alert('작성자는 필수 항목');\r\n");
      out.write("                $form.writer.focus();\r\n");
      out.write("                return;\r\n");
      out.write("            }    \r\n");
      out.write("            else if(titleValue === ''){\r\n");
      out.write("                alert('제목은 필수 항목');\r\n");
      out.write("                $form.title.focus();\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            else if(contentValue === ''){\r\n");
      out.write("                alert('내용은 필수 항목');\r\n");
      out.write("                $form.content.focus();\r\n");
      out.write("                return;\r\n");
      out.write("            }\r\n");
      out.write("            else if(pwValue === ''){\r\n");
      out.write("                    alert('비밀번호는 필수 항목');\r\n");
      out.write("                    $form.pw.focus();\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("            // 앞뒤 공백을 제거하고 빈 칸 여부 판단\r\n");
      out.write("            else if (writerValue.trim() === '') {\r\n");
      out.write("                  alert('공백만으로 글을 작성할 수 없습니다.(작성자)');\r\n");
      out.write("                  return;\r\n");
      out.write("                  \r\n");
      out.write("              }\r\n");
      out.write("        	else if (titleValue.trim() === '') {\r\n");
      out.write("        	    alert('공백만으로 글을 작성할 수 없습니다.(제목)');\r\n");
      out.write("				return;\r\n");
      out.write("				\r\n");
      out.write("        	} \r\n");
      out.write("        	else if (contentValue.trim() === '') {\r\n");
      out.write("          	    alert('공백만으로 글을 작성할 수 없습니다.(내용)');\r\n");
      out.write("  				return;\r\n");
      out.write("  				\r\n");
      out.write("          	}\r\n");
      out.write("        	else if (pwValue.trim() === '') {\r\n");
      out.write("            	    alert('공백만으로 글을 작성할 수 없습니다.(비밀번호)');\r\n");
      out.write("    				return;\r\n");
      out.write("    				\r\n");
      out.write("            	  }\r\n");
      out.write("            // 욕설이 포함된 경우, sql 문 막기\r\n");
      out.write("            else if (hasBadWords(titleValue) || hasBadWords(writerValue) || hasBadWords(contentValue)) {\r\n");
      out.write("                    alert('사용할 수 없는 단어가 포함되어 있습니다. 글을 등록할 수 없습니다.');\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("            else if (!passwordRegex.test(pwValue)) {\r\n");
      out.write("                    const pwErrorMsg = document.getElementById('pwErrorMsg');\r\n");
      out.write("                    alert('비밀번호는 (대/소)영문/특수문자 포함 8자~10자여야 합니다.');\r\n");
      out.write("                    pwInput.focus();\r\n");
      out.write("                    return;\r\n");
      out.write("                }\r\n");
      out.write("            else{\r\n");
      out.write("                titleInput.textContent = titleValue.trim();\r\n");
      out.write("                $form.submit();\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        \r\n");
      out.write("        function handleInputLength(el, max) {\r\n");
      out.write("      	  if(el.value.length > max) {\r\n");
      out.write("      	    el.value = el.value.substr(0, max);\r\n");
      out.write("            alert('사용할 수 있는 글자 수를 넘었습니다.')\r\n");
      out.write("      	  }\r\n");
      out.write("      	}\r\n");
      out.write("        //글자 submit 전 trim\r\n");
      out.write("        function trimInput(el) {\r\n");
      out.write("                el.value = el.value.trim();\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        //삭제 버튼 이벤트 처리\r\n");
      out.write("        document.getElementById('delBtn').onclick = (e) =>{\r\n");
      out.write("            if(confirm('정말 삭제하시겠습니까?')) {\r\n");
      out.write("                $form.setAttribute('action', '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/freeboard/delete');\r\n");
      out.write("                // $form.setAttribute('method','post');\r\n");
      out.write("                $form.submit();\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("      </script>\r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("      \r\n");
      out.write("      ");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/freeboard/../include/header.jsp(53,37) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login == null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                        	<li><a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/user/userJoin\"><span class=\"glyphicon glyphicon-user\"></span>Join</a></li>\r\n");
          out.write("                                       	 	<li><a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/user/userLogin\"><span class=\"glyphicon glyphicon-log-in\"></span>Login</a></li>\r\n");
          out.write("                                        ");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f1(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f1 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f1_reused = false;
    try {
      _jspx_th_c_005fif_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f1.setParent(null);
      // /WEB-INF/views/freeboard/../include/header.jsp(58,40) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f1.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${login != null}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f1 = _jspx_th_c_005fif_005f1.doStartTag();
      if (_jspx_eval_c_005fif_005f1 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("                                        	<li><a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/user/userMypage\"><span class=\"glyphicon glyphicon-user\"></span>MyPage</a></li>\r\n");
          out.write("                                        	<li><a href=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("/user/userLogout\"><span class=\"glyphicon glyphicon-log-out\"></span>Logout</a></li>\r\n");
          out.write("                                    	");
          int evalDoAfterBody = _jspx_th_c_005fif_005f1.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f1);
      _jspx_th_c_005fif_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f1, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f1_reused);
    }
    return false;
  }
}
